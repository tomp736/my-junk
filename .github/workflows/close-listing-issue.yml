name: On PR Merge - Close Listing Issue

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  close-listing-issue:
    if: github.event.pull_request.merged == true && contains(toJSON(github.event.pull_request.labels.*.name), 'listing-validated')
    runs-on: ubuntu-latest

    steps:
      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_AUTOMATION_APP_ID }}
          private-key: ${{ secrets.GH_APP_AUTOMATION_APP_PRIVATE_KEY }}

      - name: Extract issue number from PR
        id: extract-issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const prBody = context.payload.pull_request.body || '';

            // Look for "Closes #123" pattern
            const issueMatch = prBody.match(/Closes\s+#(\d+)/i);

            if (!issueMatch) {
              console.log('No issue reference found in PR body');
              return JSON.stringify({ found: false });
            }

            const issueNumber = issueMatch[1];
            console.log(`Found issue reference: #${issueNumber}`);

            // Get the issue to verify it has listing-needed label
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(issueNumber)
            });

            const hasListingNeeded = issue.labels.some(label =>
              label.name === 'listing-needed'
            );

            if (!hasListingNeeded) {
              console.log(`Issue #${issueNumber} does not have listing-needed label`);
              return JSON.stringify({ found: false });
            }

            console.log(`Issue #${issueNumber} is a listing-needed issue`);

            return JSON.stringify({
              found: true,
              issueNumber: issueNumber
            });

      - name: Parse result
        id: parse
        if: steps.extract-issue.outcome == 'success'
        run: |
          RESULT='${{ steps.extract-issue.outputs.result }}'
          echo "result=$RESULT" >> $GITHUB_OUTPUT
          FOUND=$(echo $RESULT | jq -r '.found')
          echo "found=$FOUND" >> $GITHUB_OUTPUT
          if [ "$FOUND" = "true" ]; then
            echo "issueNumber=$(echo $RESULT | jq -r '.issueNumber')" >> $GITHUB_OUTPUT
          fi

      - name: Close listing issue
        if: steps.parse.outputs.found == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const issueNumber = parseInt('${{ steps.parse.outputs.issueNumber }}');

            // Add a final comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `âœ… **Listing Completed!**

            The listing has been successfully validated and the item has been updated with the listing URL.

            PR #${{ github.event.pull_request.number }} has been merged.

            Thank you!`
            });

            // Close the issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              state: 'closed',
              state_reason: 'completed'
            });

            console.log(`Closed issue #${issueNumber}`);
